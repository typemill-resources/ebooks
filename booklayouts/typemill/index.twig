{% set language = ebookdata.language ? ebookdata.language : settings.langattr %}
<!DOCTYPE html>
<html lang="{{ language | default('en-gb') }}">
	<head>
		<meta charset="UTF-8">

		<title>{{ebookdata.title}}</title>

		<meta name="viewport" content="width=device-width, initial-scale=1.0" />

		<meta name="description" content="{{ metatabs.meta.description }}" />
		<meta name="author" content="{{ metatabs.meta.author }}" />
		<meta name="generator" content="Typemill" />

		<link rel="stylesheet" href="{{ base_url }}/plugins/ebooks/booklayouts/typemill/layout-digital.css" />
		<link rel="stylesheet" href="{{ base_url }}/plugins/ebooks/booklayouts/typemill/layout.css" />
		
		<style>
			:root {
			  --primary-bg-color: {{ ebookdata.primarycolor ? ebookdata.primarycolor : 'cadetblue' }};
			  --secondary-bg-color: {{ ebookdata.secondarycolor ? ebookdata.secondarycolor : 'cadetblue' }};
			  --primary-ft-color: {{ ebookdata.primaryfontcolor ? ebookdata.primaryfontcolor : 'black' }};
			  --secondary-ft-color: {{ ebookdata.secondaryfontcolor ? ebookdata.secondaryfontcolor : 'white' }};
			  --body-font: {{ ebookdata.fontbody ? ebookdata.fontbody : 'Open Sans' }};
			  --headline-font: {{ ebookdata.fontheadline ? ebookdata.fontheadline : 'Open Sans' }};
			  --link-color: {{ ebookdata.linkcolor ? ebookdata.linkcolor : 'cadetblue' }};
			  --font-size: {{ ebookdata.fontsize ? ebookdata.fontsize : '16' }}px;
			  --text-align: {{ ebookdata.textalign ? ebookdata.textalign : 'justify' }};
			  --hyphens: {{ ebookdata.hyphens ? ebookdata.hyphens : 'auto' }};			  
			}

			/* optional cover image */
			{% if ebookdata.coverimage %}
				.cover{
					background-image: url( {{ base_url }}/{{ ebookdata.coverimage }} );
				}
			{% endif %}

			{% if ebookdata.hideemptypages %}

				/* remove empty pages */
				.flytitle, .dedication, .tableofcontents, .bookcontent, .chapter, .bookcontent h1, #endnotes, .blurb {
				    break-before: page;
				}

			{% else %}
			
				/* add page breaks */
				.flytitle, .dedication, .tableofcontents, .bookcontent, .chapter, .bookcontent h1, #endnotes, .blurb {
				    break-before: right; /* page, left, recto, verso */
				}

			{% endif %}

		</style>

		{{ assets.renderCSS() }}

	</head>
	<body id="ebook" data-ebookdata="{{ ebookdata|json_encode|e('html_attr') }}">

		<div class="cover">
			{% if not ebookdata.coverimageonly %}
				<div class="cover-top">
					<h1 class="cover-title">{{ ebookdata.title }}</h1>		
				</div>
				<div class="cover-bottom">
					<h2 class="cover-subtitle">{{ ebookdata.subtitle }}</h2>
					<p class="cover-author">{{ ebookdata.author }}</p>
					<p class="cover-edition">{{ ebookdata.edition }}</p>		
				</div>
			{% endif %}
		</div>

		{% if ebookdata.flytitle %}
			<div class="flytitle">
				<div class="flytitle-top">
					<h1 class="cover-title">{{ ebookdata.title }}</h1>		
				</div>
				<div class="flytitle-bottom">
					<h2 class="cover-subtitle">{{ ebookdata.subtitle }}</h2>
					<p class="cover-author">{{ ebookdata.author }}</p>
					<p class="cover-edition">{{ ebookdata.edition }}</p>		
				</div>
			</div>
		{% endif %}

		<div class="imprint">
			<div class="imprint-bottom">

				{{ markdown(ebookdata.imprint) }}

			</div>
		</div>
		
		{% if ebookdata.dedication %}
			<div class="dedication">
				{{ markdown(ebookdata.dedication) }}
			</div>
		{% endif %}

		{% if ebookdata.toc %}
			<div class="tableofcontents">
				<h1>{{ ebookdata.toctitle }}</h1>
				<div id="toc"></div>
			</div>
		{% endif %}

		<div class="bookcontent">

			{% for chapter in book %}

				{{ chapter.content }}

			{% endfor %}
		
			{% if ebookdata.endnotes %}

				<div id="endnotes">
					<h1>{{ebookdata.endnotestitle}}</h1>
				</div>
		
			{% endif %}

		</div>

		{% if ebookdata.blurb %}

			<div class="blurb">
				{{ markdown(ebookdata.blurb) }}
			</div>
		
		{% endif %}

		<script>
			let ebookconfig = document.querySelector('#ebook');
			ebookdata = JSON.parse(ebookconfig.dataset.ebookdata);
		</script>

		{% block javascripts %}

			{{ assets.renderJS() }}
		
		{% endblock %}

		{% if ebookdata.endnotes %}
			<script src="{{ base_url }}/plugins/ebooks/public/endnotes.js"></script>
		{% endif %}

		<script src="{{ base_url }}/plugins/ebooks/public/paged.polyfill.js"></script>
		<script>
			class handlers extends Paged.Handler {
				constructor(chunker, polisher, caller) {
				    super(chunker, polisher, caller);
				}

				beforeParsed(content){
					
					if(ebookdata.endnotes){
						endnotes({
							content: content,
							enElement: '#endnotes'
						});
					}
					if(ebookdata.toc){
						createToc({
						    content: 		content,
						    tocElement: 	'#toc',
						    tocLevels: 		ebookdata.toclevel,
						    tocCounter: 	ebookdata.toccounter,
						    headlineArea:	'.bookcontent',
						});
					}
				}
			}
			Paged.registerHandlers(handlers);

		</script>
		
		{% if ebookdata.toc %}
			<script src="{{ base_url }}/plugins/ebooks/public/paged-toc.js"></script>
		{% endif %}

	</body>
</html>